{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Common API",
    "description": "Apis to create or query entities"
  },
  "host": "localhost:3000",
  "basePath": "/external",
  "schemes": ["http"],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/threads": {
      "get": {
        "summary": "Returns a list of threads.",
        "parameters": [
          {
            "in": "query",
            "name": "community_id",
            "required": true,
            "type": "string",
            "description": "The ID of the community."
          },
          {
            "in": "query",
            "name": "topic_id",
            "type": "integer",
            "description": "The ID of the topic."
          },
          {
            "in": "query",
            "name": "address_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of address_ids."
          },
          {
            "in": "query",
            "name": "addresses",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of addresses."
          },
          {
            "in": "query",
            "name": "no_body",
            "type": "boolean",
            "description": "Exclude the body of the thread."
          },
          {
            "in": "query",
            "name": "include_comments",
            "type": "boolean",
            "description": "Also return associated comments with thread."
          },
          {
            "in": "query",
            "name": "count_only",
            "type": "boolean",
            "description": "Return only the number of entities found."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of threads.",
            "content": {
              "application/json": {
                {
                  "address_id": "number",
                  "title": "string",
                  "kind": "string",
                  "stage": "string",
                  "id": "number?",
                  "body": "string?",
                  "plaintext": "string?",
                  "url": "string?",
                  "topic_id": "number?",
                  "pinned": "boolean?",
                  "chain": "string",
                  "read_only": "boolean?",
                  "version_history": "string[]?",
                  "snapshot_proposal": "string?",
                  "has_poll": "boolean?",
                  "created_at": "date?",
                  "updated_at": "date?",
                  "deleted_at": "date?",
                  "last_commented_on": "date?"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/comments": {
      "get": {
        "summary": "Returns a list of comments.",
        "parameters": [
          {
            "in": "query",
            "name": "community_id",
            "required": true,
            "type": "string",
            "description": "The ID of the community."
          },
          {
            "in": "query",
            "name": "address_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of addresses that posted the comments."
          },
          {
            "in": "query",
            "name": "count_only",
            "type": "boolean",
            "description": "Return only the number of entities found."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of comments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfComments"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/reactions": {
      "get": {
        "summary": "Returns a list of reactions.",
        "parameters": [
          {
            "in": "query",
            "name": "community_id",
            "required": true,
            "type": "string",
            "description": "The ID of the community."
          },
          {
            "in": "query",
            "name": "thread_id",
            "type": "integer",
            "description": "The ID of the comment."
          },
          {
            "in": "query",
            "name": "comment_id",
            "type": "integer",
            "description": "The ID of the comment."
          },
          {
            "in": "query",
            "name": "address_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of address_ids."
          },
          {
            "in": "query",
            "name": "addresses",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of addresses."
          },
          {
            "in": "query",
            "name": "count_only",
            "type": "boolean",
            "description": "Return only the number of entities found."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of reactions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfReactions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/communities": {
      "get": {
        "summary": "Returns a list of communities.",
        "parameters": [
          {
            "in": "query",
            "name": "community_id",
            "type": "string",
            "description": "The ID of the community."
          },
          {
            "in": "query",
            "name": "network",
            "type": "string",
            "description": "The network the community runs on."
          },
          {
            "in": "query",
            "name": "comment_id",
            "type": "integer",
            "description": "The ID of the comment."
          },
          {
            "in": "query",
            "name": "address_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of address_ids."
          },
          {
            "in": "query",
            "name": "addresses",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of addresses."
          },
          {
            "in": "query",
            "name": "count_only",
            "type": "boolean",
            "description": "Return only the number of entities found."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of communities.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfCommunities"
                }
              }
            }
          },
          "400": {
            "description": "Please provide a parameter to query by (community_id, network, comment_id, address_ids, addresses)"
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "summary": "Returns a list of profiles.",
        "parameters": [
          {
            "in": "query",
            "name": "addresses",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of addresses."
          },
          {
            "in": "query",
            "name": "profile_ids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "List of profile ids."
          },
          {
            "in": "query",
            "name": "count_only",
            "type": "boolean",
            "description": "Return only the number of entities found."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of profiles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfProfiles"
                }
              }
            }
          },
          "400": {
            "description": "Please provide a parameter to query by (addresses, profile_ids)"
          }
        }
      }
    },
    "/topics": {
      "get": {
        "summary": "Returns a list of topics.",
        "parameters": [
          {
            "name": "community_id",
            "in": "query",
            "type": "string",
            "description": "The ID of the community."
          },
          {
            "name": "count_only",
            "in": "query",
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of topics.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfTopics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "summary": "Returns a list of roles.",
        "parameters": [
          {
            "name": "community_id",
            "in": "query",
            "type": "string",
            "description": "The ID of the community."
          },
          {
            "in": "query",
            "name": "addresses",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of addresses."
          },
          {
            "name": "count_only",
            "in": "query",
            "type": "string",
            "description": "Return only the number of entities found."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of roles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfRoles"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/rules": {
      "get": {
        "summary": "Returns a list of rules.",
        "parameters": [
          {
            "name": "community_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "type": "string"
          },
          {
            "name": "count_only",
            "in": "query",
            "type": "string",
            "description": "Return only the number of entities found."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of rules.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfRules"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/chainNodes": {
      "get": {
        "summary": "Returns a list of chain nodes.",
        "parameters": [
          {
            "in": "query",
            "name": "chain_node_ids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "List of chain node ids."
          },
          {
            "in": "query",
            "name": "names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of chain node names."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of chain nodes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfChainNodes"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/balanceProviders": {
      "get": {
        "summary": "Returns a list of balance providers.",
        "parameters": [
          {
            "in": "query",
            "name": "chain_node_ids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "List of chain node ids."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of balance providers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfBalanceProviders"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/tokenBalance": {
      "get": {
        "summary": "Returns a list of token balances.",
        "parameters": [
          {
            "name": "chain_node_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "addresses",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "balance_provider",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "opts",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of token balances for provided addresses.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfTokenBalances"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "apikey",
      "in": "header",
      "description": "You can request an API key from: https://commonwealthlabsinc8d1edcd2.us.portal.konghq.com/"
    }
  }
}
