import {
  CommunityAttributes,
  GroupAttributes,
  UserInstance,
} from '@hicommonwealth/model';
import { ServerGroupsController } from '../server_groups_controller';

export type GenerateStakeholderGroupOptions = {
  user: UserInstance;
  community: CommunityAttributes;
  address: AddressInstance;
};

export type GenerateStakeholderGroupResult = GroupAttributes;

export async function __generateStakeholderGroup(
  this: ServerGroupsController,
  { user, community, address }: GenerateStakeholderGroupOptions,
): Promise<GenerateStakeholderGroupResult> {
  // if stakeholder group already exists, skip
  const existingGroups = await this.getGroups({
    communityId: community.id,
  });
  const existingStakeholderGroup = existingGroups.find(
    (g) => g.is_system_managed,
  );
  if (existingStakeholderGroup) {
    return;
  }

  const [group] = await this.createGroup({
    user,
    community,
    address,
    metadata: {
      name: `Stakeholder`,
      description: 'Autogenerated group for token stakeholders',
    },
    requirements: [], // TODO: add requirements for stakeholders
  });
  return group;
}
